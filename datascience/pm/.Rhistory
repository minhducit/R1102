install.packages();
install.packages()
legend('topleft', c("Join with dense column","Join with sorted column"), cex=1.5, col=c("red","blue"), pch=21:22, lty=1:2, lwd=4);
source('~/R_Prac/dense_vs_sorted.R')
legend('topleft', c("Join with dense column","Join with sorted column"), cex=1.5, col=c("red","blue"), pch=21:22, lty=1:2, lwd=4);
getwd()
A
A <- matrix(c(1,2,3,4,5,6,7,8),nrow = 4, ncol = 2)
A
getwd()
A <- matrix(c(1,2,3,4,5,6,7,8),nrow = 4, ncol = 2)
A
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(A)
View(A)
plot(A[0], A[1], type="o", ylab="Processing time (ms)", xlab="Sampling (percentage)", ylim=c(0, 140), cex.lab=2, cex.axis = 2, col="blue", lwd=4, lty=1, pch=22)
source('~/R_Prac/matrixprint.R', echo=TRUE)
install.packages("hexbin")
source('~/R_Prac/matrixprint.R', echo=TRUE)
getwd()
Rscript
R
source('~/R_Prac/dense_vs_sorted.R', echo=TRUE)
#Sample|MedianDense|MinDense|MedianSorted|MinSorted
args <- commandArgs(trailingOnly = TRUE)
df <- read.csv("C:\PMD\bitbucket\iswc2016\figures\optTime_vs_numPatterns_MonetDB.dat",sep="|",head=T)
args <- commandArgs(trailingOnly = TRUE)
df <- read.csv("C:\PMD\bitbucket\iswc2016\figures\optTime_vs_numPatterns_MonetDB.dat",sep="|",head=T)
df <- read.csv("C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns_MonetDB.dat",sep="|",head=T)
#mydf <- data.frame(meddense=df$MedianDense, medsorted=df$MedianSorted, row.names=df$Sample)
sample <- cbind(df$Sample)
#outfile<-paste(args[2],"",sep = "")
#pdf(file=outfile)
par(mar=c(5.1,4.5,6.1,2.1))
plot(df$Sample, df$MinSorted * 0.001, type="o", ylab="Processing time (ms)", xlab="Sampling (percentage)", ylim=c(0, 140), cex.lab=2, cex.axis = 2, col="blue", lwd=4, lty=1, pch=22)
plot(df$NumPattern, df$Triple-based, type="o", ylab="Processing time (ms)", xlab="Sampling (percentage)", ylim=c(0, 140), cex.lab=2, cex.axis = 2, col="blue", lwd=4, lty=1, pch=22)
plot(df$NumPattern, df$Triple-based, type="o", ylab="Processing time (ms)", xlab="Sampling (percentage)", ylim=c(0, 140), cex.lab=2, cex.axis = 2, col="blue", lwd=4, lty=1, pch=22)
#Sample|MedianDense|MinDense|MedianSorted|MinSorted
args <- commandArgs(trailingOnly = TRUE)
#NumPattern|Triple-based|Relational-based
args <- commandArgs(trailingOnly = TRUE)
df <- read.csv("C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns_MonetDB.dat",sep="|",head=T)
#mydf <- data.frame(meddense=df$MedianDense, medsorted=df$MedianSorted, row.names=df$Sample)
sample <- cbind(df$Sample)
#outfile<-paste(args[2],"",sep = "")
df <- read.csv("C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns_MonetDB.dat",sep="|",head=T)
#outfile<-paste(args[2],"",sep = "")
#pdf(file=outfile)
par(mar=c(5.1,4.5,6.1,2.1))
plot(df$NumPattern, df$Triple-based, type="o", ylab="Processing time (ms)", xlab="Sampling (percentage)", ylim=c(0, 140), cex.lab=2, cex.axis = 2, col="blue", lwd=4, lty=1, pch=22)
#NumPattern|Triple_based|Relational_based
args <- commandArgs(trailingOnly = TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('~/R_Prac/optTime_vs_numPatterns.R', echo=TRUE)
source('C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns.R', echo=TRUE)
source('C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns.R', echo=TRUE)
source('C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns.R', echo=TRUE)
source('C:/PMD/bitbucket/iswc2016/figures/optTime_vs_numPatterns.R', echo=TRUE)
plot_colors <- c("blue","black", "green", "orange", "pink") text <-
plot_colors <- c("blue","black", "green", "orange", "pink")
text <-c("Fabricated Metal", "Iron and Steel", "Paper", "Beverages",
"Tobacco")
plot_colors <- c("blue","black", "green", "orange", "pink")
text <-c("Fabricated Metal", "Iron and Steel", "Paper", "Beverages","Tobacco")
plot.new()
par(xpd=TRUE)
legend("center",legend = text, text.width = max(sapply(text, strwidth)), col=plot_colors, lwd=5, cex=1, horiz = TRUE)
par(xpd=FALSE)
par(xpd=FALSE)
par(xpd=FALSE)
plot_colors <- c("blue","black", "green", "orange", "pink")
text <-c("Fabricated Metal", "Iron and Steel", "Paper", "Beverages","Tobacco")
#outfile<-paste(args[2],"",sep = "")
#pdf(file=outfile)
plot.new()
#par(xpd=TRUE)
legend("center",legend = text, text.width = max(sapply(text, strwidth)), col=plot_colors, lwd=5, cex=1, horiz = TRUE)
#par(xpd=FALSE)
plot_colors <- c("red","blue", "green")
text <-c("MonetDB-emer", "MonetDB-triple", "MonetDB-SQL")
#Set margin
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
#barplot(0,0, axes=FALSE, col=plot_colors, legend=text, args.legend = list(cex=2, horiz = TRUE))
barplot(0,0, axes=FALSE)
legend(x="center",legend=text, cex=1, xpd = TRUE, horiz = TRUE, fill=plot_colors, text.width = max(sapply(text, strwidth)))
help(legend)
install.packages('caret')
install.packages('caret')
a<-seq(3.2, 28, by=2)
print a
print(a)
a<-seq(3.2, 30, by=4.4)
print(a)
library(help = "datasets")
cars{dataset}
cars{datasets}
help(solve)
??solve
s<-seq(-5,10, by=.2)
s
s<-seq(-5,10, by=1)
s
s<-seq(-15,10, by=1)
s
plot(s)
csv',sep =",")
>

C:\Users\dpham\Downloads
df <- read.csv('C:\Users\dpham\Downloads\cars.csv',sep=",")
df <- read.csv('C:/Users/dpham/Downloads/cars.csv',sep=",")
df
plot(df)
iris
cars
q()
library(tidyjson)
install.packages(tidyjson)
library(tidyjson)
source('C:/PMD/R/R1102/datascience/pm/loadjs.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/loadjs.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/loadjs.R', echo=TRUE)
help(gather_array)
help(tidyjson)
??tidyjson
library(dplyr)
commits
json <- '[{"name": "bob", "age": 32}, {"name": "susan", "age": 54}]'
json %>%
as.tbl_json %>%
gather_array %>%
spread_value(    # Spread (widen) values to widen the data.frame
user.name = jstring("name"),  # Extract the "name" object as a character column "user.name"
user.age = jnumber("age")     # Extract the "age" object as a numeric column "user.age"
)
source('C:/PMD/R/R1102/datascience/pm/loadjs.R', echo=TRUE)
version
version
source('C:/PMD/R/R1102/datascience/pm/loadjs.R', echo=TRUE)
#install.packages("tidyjson")
#library(jsonlite)
library(tidyjson)
library(dplyr)
#library(magrittr)
#library for viewing json
#json <- '[{"name": "bob1", "age": 32}, {"name": "susan", "age": 54}]'
setwd("C:/PMD/R/R1102/datascience/pm")
json <- read_json("VIERJSA-184.json")
head(json, n = 3)
jsontbl1 <- json %>%
#as.tbl_json %>%
gather_array %>%
spread_values(    # Spread (widen) values to widen the data.frame
task_key = jstring("key")  # Extract the "key" object as
) %>%
enter_object("fields")  %>%
gather_array %>%
spread_values(    # Spread (widen) values to widen the data.frame
assignee = jstring("assignee")  # Extract the "key" object as
)
jsontbl1
#jsontbl$"user.name"
json
ls()
json <- read_json("example.json",format = c("json", "jsonl", "infer"))
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
ls()
rm(list = ls())
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
View(json)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
rm (list = ls())
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
jsontbl1 <- json %>%
#as.tbl_json %>%
#gather_array %>%
spread_values(    # Spread (widen) values to widen the data.frame
task_key = jstring("key")  # Extract the "key" object as
) %>%
enter_object("fields")  %>%
#gather_array %>%
spread_values(    # Spread (widen) values to widen the data.frame
assignee = jstring("customfield_10190")  # Extract the "key" object as
)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
rm (list = ls())
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
rm(list = ls())
#install.packages("tidyjson")
#library(jsonlite)
library(tidyjson)
library(dplyr)
#library(magrittr)
#library for viewing json
#json <- '[{"name": "bob1", "age": 32}, {"name": "susan", "age": 54}]'
setwd("C:/PMD/R/R1102/datascience/pm")
json <- read_json("VIERJSA-184_expand_changelog.json")
#json <- read_json("example.json",format = c("json", "jsonl", "infer"))
head(json, n = 3)
json
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jirajson.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jira_json_to_table.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jira_json_to_table.R', echo=TRUE)
jsontbl <- json %>%
spread_values(
IssueKey = jstring("key")  # Extract the key of the Issue
) %>%
enter_object("changelog")  %>%
enter_object("histories")  %>%
gather_array %>%
spread_values(
historyId = jnumber("id"),  # Id of each activity
createdTime = jstring("created")
) %>%
enter_object("author") %>%
spread_values(
author = jstring("name")
)
source('C:/PMD/R/R1102/datascience/pm/jira_json_to_table.R', echo=TRUE)
source('C:/PMD/R/R1102/datascience/pm/jira_json_to_table.R', echo=TRUE)
